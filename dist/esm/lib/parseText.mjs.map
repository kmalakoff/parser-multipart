{"version":3,"sources":["parseText.ts"],"sourcesContent":["import newlineIterator from 'newline-iterator';\nimport { IParser } from '../index.js';\n\nexport default function parseText(parser: IParser, text: string): void {\n  const iterator = newlineIterator(text);\n  let next = iterator.next();\n  while (!next.done) {\n    parser.push(next.value);\n    next = iterator.next();\n  }\n  if (!parser.done()) parser.push(null);\n}\n"],"names":["newlineIterator","parseText","parser","text","iterator","next","done","push","value"],"mappings":"AAAA,OAAOA,eAAe,MAAM,kBAAkB,CAAC;AAG/C,eAAe,SAASC,SAAS,CAACC,MAAe,EAAEC,IAAY,EAAQ;IACrE,MAAMC,QAAQ,GAAGJ,eAAe,CAACG,IAAI,CAAC,AAAC;IACvC,IAAIE,IAAI,GAAGD,QAAQ,CAACC,IAAI,EAAE,AAAC;IAC3B,MAAO,CAACA,IAAI,CAACC,IAAI,CAAE;QACjBJ,MAAM,CAACK,IAAI,CAACF,IAAI,CAACG,KAAK,CAAC,CAAC;QACxBH,IAAI,GAAGD,QAAQ,CAACC,IAAI,EAAE,CAAC;KACxB;IACD,IAAI,CAACH,MAAM,CAACI,IAAI,EAAE,EAAEJ,MAAM,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;CACvC,CAAA"}