{"version":3,"sources":["ResponseParsed.ts"],"sourcesContent":["// @ts-ignore\nimport HeadersPolyfill from './lib/HeadersPolyfill.ts';\n// @ts-ignore\nimport ResponseParser from './ResponseParser.ts';\n\nexport default class ParsedResponse implements Response {\n  private _parser: ResponseParser;\n  private _bodyUsed: boolean;\n\n  constructor(parser: ResponseParser) {\n    this._parser = parser;\n    this._bodyUsed = false;\n  }\n\n  get type(): ResponseType {\n    return 'default';\n  }\n  get headers() {\n    return new HeadersPolyfill(this._parser.headers.headers as unknown as Record<string, string>) as Headers;\n  }\n\n  get body(): ReadableStream<Uint8Array> {\n    throw new Error('Not supported: body');\n  }\n\n  get ok() {\n    return this._parser.headers.ok;\n  }\n  get status() {\n    return this._parser.headers.status;\n  }\n  get statusText() {\n    return this._parser.headers.statusText;\n  }\n  get redirected() {\n    return false;\n  }\n  get url() {\n    return '';\n  }\n  clone() {\n    return new ParsedResponse(this._parser);\n  }\n  get bodyUsed() {\n    return this._bodyUsed;\n  }\n\n  text(): Promise<string> {\n    if (this._bodyUsed) throw new Error('Body already consumed');\n    this._bodyUsed = true;\n    return Promise.resolve(this._parser.body);\n  }\n\n  json(): Promise<unknown> {\n    if (this._bodyUsed) throw new Error('Body already consumed');\n    this._bodyUsed = true;\n    return Promise.resolve(JSON.parse(this._parser.body));\n  }\n\n  arrayBuffer(): Promise<ArrayBuffer> {\n    throw new Error('Unsupported: arrayBuffer');\n  }\n\n  blob(): Promise<Blob> {\n    throw new Error('Unsupported: blob');\n  }\n\n  formData(): Promise<FormData> {\n    throw new Error('Unsupported: formData');\n  }\n}\n"],"names":["HeadersPolyfill","ParsedResponse","type","headers","_parser","body","Error","ok","status","statusText","redirected","url","clone","bodyUsed","_bodyUsed","text","Promise","resolve","json","JSON","parse","arrayBuffer","blob","formData","constructor","parser"],"mappings":"AAAA,aAAa;;;;;;;;;;;;;;AACb,OAAOA,qBAAqB,2BAA2B;AAIxC,IAAA,AAAMC,iBAAN,MAAMA;IASnB,IAAIC,OAAqB;QACvB,OAAO;IACT;IACA,IAAIC,UAAU;QACZ,OAAO,IAAIH,gBAAgB,IAAI,CAACI,OAAO,CAACD,OAAO,CAACA,OAAO;IACzD;IAEA,IAAIE,OAAmC;QACrC,MAAM,IAAIC,MAAM;IAClB;IAEA,IAAIC,KAAK;QACP,OAAO,IAAI,CAACH,OAAO,CAACD,OAAO,CAACI,EAAE;IAChC;IACA,IAAIC,SAAS;QACX,OAAO,IAAI,CAACJ,OAAO,CAACD,OAAO,CAACK,MAAM;IACpC;IACA,IAAIC,aAAa;QACf,OAAO,IAAI,CAACL,OAAO,CAACD,OAAO,CAACM,UAAU;IACxC;IACA,IAAIC,aAAa;QACf,OAAO;IACT;IACA,IAAIC,MAAM;QACR,OAAO;IACT;IACAC,QAAQ;QACN,OAAO,IAAIX,eAAe,IAAI,CAACG,OAAO;IACxC;IACA,IAAIS,WAAW;QACb,OAAO,IAAI,CAACC,SAAS;IACvB;IAEAC,OAAwB;QACtB,IAAI,IAAI,CAACD,SAAS,EAAE,MAAM,IAAIR,MAAM;QACpC,IAAI,CAACQ,SAAS,GAAG;QACjB,OAAOE,QAAQC,OAAO,CAAC,IAAI,CAACb,OAAO,CAACC,IAAI;IAC1C;IAEAa,OAAyB;QACvB,IAAI,IAAI,CAACJ,SAAS,EAAE,MAAM,IAAIR,MAAM;QACpC,IAAI,CAACQ,SAAS,GAAG;QACjB,OAAOE,QAAQC,OAAO,CAACE,KAAKC,KAAK,CAAC,IAAI,CAAChB,OAAO,CAACC,IAAI;IACrD;IAEAgB,cAAoC;QAClC,MAAM,IAAIf,MAAM;IAClB;IAEAgB,OAAsB;QACpB,MAAM,IAAIhB,MAAM;IAClB;IAEAiB,WAA8B;QAC5B,MAAM,IAAIjB,MAAM;IAClB;IA5DAkB,YAAYC,MAAsB,CAAE;QAHpC,uBAAQrB,WAAR,KAAA;QACA,uBAAQU,aAAR,KAAA;QAGE,IAAI,CAACV,OAAO,GAAGqB;QACf,IAAI,CAACX,SAAS,GAAG;IACnB;AA0DF;AAjEA,SAAqBb,4BAiEpB"}