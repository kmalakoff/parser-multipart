{"version":3,"sources":["ResponseParser.ts"],"sourcesContent":["// @ts-ignore\nimport ResponseParsed from './ResponseParsed.ts';\n// @ts-ignore\nimport type { Parser } from './ResponseParsed.ts';\n// @ts-ignore\nimport BodyHeaders from './lib/BodyHeaders.ts';\n// @ts-ignore\nimport parseHeader from './lib/parseHeader.ts';\n// @ts-ignore\nimport parseStatus from './lib/parseStatus.ts';\n// @ts-ignore\nimport parseText from './lib/parseText.ts';\n\nexport enum ParseStatus {\n  Headers = 1,\n  Body = 2,\n}\n\nexport interface ParsingState {\n  status: ParseStatus;\n  lines: string[];\n}\n\nexport default class MultipartResponse {\n  contentType: string;\n  headers: BodyHeaders = null;\n  body: string = null;\n\n  private _parsingState: ParsingState | null = {\n    status: ParseStatus.Body,\n    lines: [],\n  };\n\n  constructor(contentType: string) {\n    if (contentType === undefined) throw new Error('Response missing a content type');\n    this.contentType = contentType;\n    if (this.contentType === 'application/http') {\n      this.headers = new BodyHeaders();\n      this._parsingState.status = ParseStatus.Headers;\n    }\n  }\n\n  done(): boolean {\n    return !this._parsingState;\n  }\n\n  parse(text: string): void {\n    parseText(this, text);\n  }\n\n  push(line: string): void {\n    if (!this._parsingState) throw new Error('Attempting to parse a completed response');\n    if (line === null) {\n      if (this._parsingState.status !== ParseStatus.Body) throw new Error('Unexpected parsing state');\n      this.body = this._parsingState.lines.join('\\r\\n');\n      this._parsingState = null;\n      return;\n    }\n\n    if (this._parsingState.status === ParseStatus.Headers) {\n      if (!line.length) this._parsingState.status = ParseStatus.Body;\n      else if (!parseStatus(this.headers, line)) parseHeader(this.headers.headers, line, ':');\n    } else if (this._parsingState.status === ParseStatus.Body) {\n      if (!line.length) this.push(null);\n      else this._parsingState.lines.push(line);\n    }\n  }\n\n  get response(): Response {\n    if (this._parsingState) throw new Error('Attempting to use an incomplete response');\n    return new ResponseParsed(this as Parser);\n  }\n}\n"],"names":["ResponseParsed","BodyHeaders","parseHeader","parseStatus","parseText","ParseStatus","Headers","Body","MultipartResponse","done","_parsingState","parse","text","push","line","Error","status","body","lines","join","length","headers","response","constructor","contentType","undefined"],"mappings":"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"}