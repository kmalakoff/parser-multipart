{"version":3,"sources":["Parser.ts"],"sourcesContent":["import Part from './Part.js';\nimport parseHeader from './lib/parseHeader.js';\nimport parseText from './lib/parseText.js';\nimport type { HeadersObject } from './index.js';\n\nexport enum ParseStatus {\n  Parts = 1,\n}\n\nexport interface ParsingState {\n  status: ParseStatus;\n  boundaryEnd: string | null;\n}\n\nexport default class MultipartParser {\n  type: string;\n  headers: HeadersObject = {};\n  parts: Part[] = [];\n\n  private _parsingState: ParsingState | null = {\n    status: ParseStatus.Parts,\n    boundaryEnd: null,\n  };\n  private boundary: string | null = null;\n\n  constructor(headers: Headers | string | HeadersObject) {\n    if (!headers) throw new Error('Headers missing');\n\n    let contentType: string;\n    if (typeof headers === 'string') contentType = headers;\n    /* c8 ignore start */ else if (headers.get) contentType = (headers as Headers).get('content-type');\n    /* c8 ignore stop */ else contentType = (headers as HeadersObject)['content-type'];\n    if (!contentType) throw Error('content-type header not found');\n\n    const parts = contentType.split(/;/g);\n    this.type = parts.shift().trim();\n    if (this.type.indexOf('multipart') !== 0) {\n      throw new Error(`Expecting a multipart type. Received: ${contentType}`);\n    }\n    parts.forEach(part => parseHeader(this.headers, part, '=')) ;\n\n    // boundary\n    if (!this.headers.boundary) throw new Error('Invalid Content Type: no boundary');\n    this.boundary = `--${this.headers.boundary}`;\n    this._parsingState.boundaryEnd = `--${this.headers.boundary}--`;\n    this._parsingState.status = ParseStatus.Parts;\n  }\n\n  done(): boolean {\n    return !this._parsingState;\n  }\n\n  parse(text: string): void {\n    parseText(this, text);\n  }\n\n  push(line: string): void {\n    const part = this.parts.length ? this.parts[this.parts.length - 1] : null;\n\n    if (!this._parsingState) throw new Error('Attempting to parse a completed multipart');\n    if (line === null) {\n      if (part && !part.done()) part.push(null);\n      this._parsingState = null;\n      return;\n    }\n\n    if (line === this._parsingState.boundaryEnd) this.push(null);\n    else if (line === this.boundary) {\n      if (part && !part.done()) part.push(null);\n      this.parts.push(new Part());\n    } else if (part) part.push(line);\n    else {\n      if (line.length) throw new Error(`Unexpected line: ${line}`);\n    }\n  }\n}\n"],"names":["Part","parseHeader","parseText","ParseStatus","Parts","MultipartParser","done","_parsingState","parse","text","push","line","part","parts","length","Error","boundaryEnd","boundary","constructor","headers","status","contentType","get","split","type","shift","trim","indexOf","forEach"],"mappings":"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"}