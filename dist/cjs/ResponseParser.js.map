{"version":3,"sources":["ResponseParser.ts","<<jsx-config-pragma.js>>"],"sourcesContent":["// @ts-ignore\nimport ResponseParsed from './ResponseParsed.ts';\n// @ts-ignore\nimport type { Parser } from './ResponseParsed.ts';\n// @ts-ignore\nimport BodyHeaders from './lib/BodyHeaders.ts';\n// @ts-ignore\nimport parseHeader from './lib/parseHeader.ts';\n// @ts-ignore\nimport parseStatus from './lib/parseStatus.ts';\n// @ts-ignore\nimport parseText from './lib/parseText.ts';\n\nexport enum ParseStatus {\n  Headers = 1,\n  Body = 2,\n}\n\nexport interface ParsingState {\n  status: ParseStatus;\n  lines: string[];\n}\n\nexport default class MultipartResponse {\n  contentType: string;\n  headers: BodyHeaders = null;\n  body: string = null;\n\n  private _parsingState: ParsingState | null = {\n    status: ParseStatus.Body,\n    lines: [],\n  };\n\n  constructor(contentType: string) {\n    if (contentType === undefined) throw new Error('Response missing a content type');\n    this.contentType = contentType;\n    if (this.contentType === 'application/http') {\n      this.headers = new BodyHeaders();\n      this._parsingState.status = ParseStatus.Headers;\n    }\n  }\n\n  done(): boolean {\n    return !this._parsingState;\n  }\n\n  parse(text: string): void {\n    parseText(this, text);\n  }\n\n  push(line: string): void {\n    if (!this._parsingState) throw new Error('Attempting to parse a completed response');\n    if (line === null) {\n      if (this._parsingState.status !== ParseStatus.Body) throw new Error('Unexpected parsing state');\n      this.body = this._parsingState.lines.join('\\r\\n');\n      this._parsingState = null;\n      return;\n    }\n\n    if (this._parsingState.status === ParseStatus.Headers) {\n      if (!line.length) this._parsingState.status = ParseStatus.Body;\n      else if (!parseStatus(this.headers, line)) parseHeader(this.headers.headers, line, ':');\n    } else if (this._parsingState.status === ParseStatus.Body) {\n      if (!line.length) this.push(null);\n      else this._parsingState.lines.push(line);\n    }\n  }\n\n  get response(): Response {\n    if (this._parsingState) throw new Error('Attempting to use an incomplete response');\n    return new ResponseParsed(this as Parser);\n  }\n}\n","React.createElement"],"names":["MultipartResponse","ParseStatus","Headers","Body","contentType","headers","body","_parsingState","status","lines","undefined","Error","BodyHeaders","done","parse","text","parseText","push","line","join","length","parseStatus","parseHeader","response","ResponseParsed"],"mappings":"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"}