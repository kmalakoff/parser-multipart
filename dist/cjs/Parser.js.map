{"version":3,"file":"Parser.js","names":["ParseStatus","MultipartParser","headers","status","Parts","boundaryEnd","Error","contentType","get","parts","split","type","shift","trim","indexOf","part","parseHeader","boundary","_parsingState","text","parseText","line","length","done","push","Part"],"sources":["../../src/Parser.ts"],"sourcesContent":["import Part from \"./Part.js\";\nimport parseHeader from \"./lib/parseHeader.js\";\nimport parseText from \"./lib/parseText.js\";\nimport type { HeadersObject } from \"./index.js\";\n\nexport enum ParseStatus {\n  Parts = 1,\n}\n\nexport interface ParsingState {\n  status: ParseStatus;\n  boundaryEnd: string | null;\n}\n\nexport default class MultipartParser {\n  type: string;\n  headers: HeadersObject = {};\n  parts: Part[] = [];\n\n  private _parsingState: ParsingState | null = {\n    status: ParseStatus.Parts,\n    boundaryEnd: null,\n  };\n  private boundary: string | null = null;\n\n  constructor(headers: Headers | string | HeadersObject) {\n    if (!headers) throw new Error(\"Headers missing\");\n\n    let contentType: string;\n    if (typeof headers === \"string\") contentType = headers;\n    /* c8 ignore start */ else if (headers.get) contentType = (headers as Headers).get(\"content-type\");\n    /* c8 ignore stop */ else contentType = (headers as HeadersObject)[\"content-type\"];\n    if (!contentType) throw Error(\"content-type header not found\");\n\n    const parts = contentType.split(/;/g);\n    this.type = parts.shift().trim();\n    if (this.type.indexOf(\"multipart\") !== 0) {\n      throw new Error(`Expecting a multipart type. Received: ${contentType}`);\n    }\n    for (const part of parts) parseHeader(this.headers, part, \"=\");\n\n    // boundary\n    if (!this.headers.boundary) throw new Error(\"Invalid Content Type: no boundary\");\n    this.boundary = `--${this.headers.boundary}`;\n    this._parsingState.boundaryEnd = `--${this.headers.boundary}--`;\n    this._parsingState.status = ParseStatus.Parts;\n  }\n\n  done(): boolean {\n    return !this._parsingState;\n  }\n\n  parse(text: string): void {\n    parseText(this, text);\n  }\n\n  push(line: string): void {\n    const part = this.parts.length ? this.parts[this.parts.length - 1] : null;\n\n    if (!this._parsingState) throw new Error(\"Attempting to parse a completed multipart\");\n    if (line === null) {\n      if (part && !part.done()) part.push(null);\n      this._parsingState = null;\n      return;\n    }\n\n    if (line === this._parsingState.boundaryEnd) this.push(null);\n    else if (line === this.boundary) {\n      if (part && !part.done()) part.push(null);\n      this.parts.push(new Part());\n    } else if (part) part.push(line);\n    else {\n      if (line.length) throw new Error(`Unexpected line: ${line}`);\n    }\n  }\n}\n"],"mappings":"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"}