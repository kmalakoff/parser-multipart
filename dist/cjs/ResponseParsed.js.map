{"version":3,"sources":["ResponseParsed.ts"],"sourcesContent":["// @ts-ignore\nimport BodyHeaders from './lib/BodyHeaders.js';\n// @ts-ignore\nimport HeadersPolyfill from './lib/HeadersPolyfill.ts';\n\nexport interface Parser {\n  headers: BodyHeaders;\n  body: string;\n}\n\nexport default class ParsedResponse implements Response {\n  private _parser: Parser;\n  private _bodyUsed: boolean;\n\n  constructor(parser: Parser) {\n    this._parser = parser;\n    this._bodyUsed = false;\n  }\n\n  get type(): ResponseType {\n    return 'default';\n  }\n  get headers() {\n    return new HeadersPolyfill(this._parser.headers.headers as unknown as Record<string, string>);\n  }\n\n  get body(): ReadableStream<Uint8Array> {\n    throw new Error('Not supported: body');\n  }\n\n  get ok() {\n    return this._parser.headers.ok;\n  }\n  get status() {\n    return this._parser.headers.status;\n  }\n  get statusText() {\n    return this._parser.headers.statusText;\n  }\n  get redirected() {\n    return false;\n  }\n  get url() {\n    return '';\n  }\n  clone() {\n    return new ParsedResponse(this._parser);\n  }\n  get bodyUsed() {\n    return this._bodyUsed;\n  }\n\n  text(): Promise<string> {\n    if (this._bodyUsed) throw new Error('Body already consumed');\n    this._bodyUsed = true;\n    return Promise.resolve(this._parser.body);\n  }\n\n  json(): Promise<unknown> {\n    if (this._bodyUsed) throw new Error('Body already consumed');\n    this._bodyUsed = true;\n    return Promise.resolve(JSON.parse(this._parser.body));\n  }\n\n  arrayBuffer(): Promise<ArrayBuffer> {\n    throw new Error('Unsupported: arrayBuffer');\n  }\n\n  blob(): Promise<Blob> {\n    throw new Error('Unsupported: blob');\n  }\n\n  formData(): Promise<FormData> {\n    throw new Error('Unsupported: formData');\n  }\n}\n"],"names":["ParsedResponse","parser","_parser","_bodyUsed","type","headers","HeadersPolyfill","body","Error","ok","status","statusText","redirected","url","clone","bodyUsed","text","Promise","resolve","json","JSON","parse","arrayBuffer","blob","formData"],"mappings":"AAAA,aAAa;;;;;;;;eAUQA;;;wEAPO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOb,IAAA,AAAMA,+BAAD,AAAL;;aAAMA,eAIPC,MAAc;gCAJPD;QACnB,uBAAQE,WAAR,KAAA;QACA,uBAAQC,aAAR,KAAA;QAGE,IAAI,CAACD,OAAO,GAAGD;QACf,IAAI,CAACE,SAAS,GAAG;;kBANAH;;YASfI,KAAAA;iBAAJ;gBACE,OAAO;YACT;;;YACIC,KAAAA;iBAAJ;gBACE,OAAO,IAAIC,0BAAe,CAAC,IAAI,CAACJ,OAAO,CAACG,OAAO,CAACA,OAAO;YACzD;;;YAEIE,KAAAA;iBAAJ;gBACE,MAAM,IAAIC,MAAM;YAClB;;;YAEIC,KAAAA;iBAAJ;gBACE,OAAO,IAAI,CAACP,OAAO,CAACG,OAAO,CAACI,EAAE;YAChC;;;YACIC,KAAAA;iBAAJ;gBACE,OAAO,IAAI,CAACR,OAAO,CAACG,OAAO,CAACK,MAAM;YACpC;;;YACIC,KAAAA;iBAAJ;gBACE,OAAO,IAAI,CAACT,OAAO,CAACG,OAAO,CAACM,UAAU;YACxC;;;YACIC,KAAAA;iBAAJ;gBACE,OAAO;YACT;;;YACIC,KAAAA;iBAAJ;gBACE,OAAO;YACT;;;YACAC,KAAAA;mBAAAA,SAAAA;gBACE,OAAO,IApCUd,eAoCS,IAAI,CAACE,OAAO;YACxC;;;YACIa,KAAAA;iBAAJ;gBACE,OAAO,IAAI,CAACZ,SAAS;YACvB;;;YAEAa,KAAAA;mBAAAA,SAAAA;gBACE,IAAI,IAAI,CAACb,SAAS,EAAE,MAAM,IAAIK,MAAM;gBACpC,IAAI,CAACL,SAAS,GAAG;gBACjB,OAAOc,QAAQC,OAAO,CAAC,IAAI,CAAChB,OAAO,CAACK,IAAI;YAC1C;;;YAEAY,KAAAA;mBAAAA,SAAAA;gBACE,IAAI,IAAI,CAAChB,SAAS,EAAE,MAAM,IAAIK,MAAM;gBACpC,IAAI,CAACL,SAAS,GAAG;gBACjB,OAAOc,QAAQC,OAAO,CAACE,KAAKC,KAAK,CAAC,IAAI,CAACnB,OAAO,CAACK,IAAI;YACrD;;;YAEAe,KAAAA;mBAAAA,SAAAA;gBACE,MAAM,IAAId,MAAM;YAClB;;;YAEAe,KAAAA;mBAAAA,SAAAA;gBACE,MAAM,IAAIf,MAAM;YAClB;;;YAEAgB,KAAAA;mBAAAA,SAAAA;gBACE,MAAM,IAAIhB,MAAM;YAClB;;;WAhEmBR"}