!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("newline-iterator")):"function"==typeof define&&define.amd?define(["exports","newline-iterator"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).parserMultipart={},t.newlineIterator)}(this,(function(t,e){"use strict";function n(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var s=n(e);function r(t,e,n){var s=e.indexOf(n);if(-1===s)throw new Error("Unexpected header format: ".concat(e));var r=e.slice(0,s),i=e.slice(s+1);t[r.trim().toLowerCase()]=i.trim()}function i(t,e){for(var n=s.default(e),r=n.next();!r.done;)t.push(r.value),r=n.next();t.done()||t.push(null)}var o,a=/^[A-Z]+\/(\d)\.(\d) (\d{3}) (.*)$/;!function(t){t[t.Headers=1]="Headers",t[t.Body=2]="Body"}(o||(o={}));var p,h=function(){this.headers={}},u=function(){function t(t){if(this.headers=null,this.body=null,this._parsingState={status:o.Body,lines:[]},void 0===t)throw new Error("Response missing a content type");this.contentType=t,"application/http"===this.contentType&&(this.headers=new h,this._parsingState.status=o.Headers)}return t.prototype.done=function(){return!this._parsingState},t.prototype.parse=function(t){i(this,t)},t.prototype.push=function(t){if(!this._parsingState)throw new Error("Attempting to parse a completed response");if(null===t){if(this._parsingState.status!==o.Body)throw new Error("Unexpected parsing state");return this.body=this._parsingState.lines.join("\r\n"),void(this._parsingState=null)}this._parsingState.status===o.Headers?t.length?function(t,e){var n=e.match(a);return!!n&&(t.version={major:parseInt(n[1],10),minor:parseInt(n[2],10)},t.status=parseInt(n[3],10),t.statusText=n[4],t.ok="OK"===t.statusText,!0)}(this.headers,t)||r(this.headers.headers,t,":"):this._parsingState.status=o.Body:this._parsingState.status===o.Body&&(t.length?this._parsingState.lines.push(t):this.push(null))},t.prototype.text=function(){if(this._parsingState)throw new Error("Attempting to use an incomplete response");return this.body},t.prototype.json=function(){if(this._parsingState)throw new Error("Attempting to use an incomplete response");return JSON.parse(this.body)},t}();!function(t){t[t.Headers=1]="Headers",t[t.Response=2]="Response"}(p||(p={}));var d,l=function(){function t(){this.headers={},this._parsingState={status:p.Headers}}return t.prototype.done=function(){return!this._parsingState},t.prototype.parse=function(t){i(this,t)},t.prototype.push=function(t){if(!this._parsingState)throw new Error("Attempting to parse a completed part");if(null===t){if(this._parsingState.status!==p.Response)throw new Error("Unexpected parsing state");return this.response.done()||this.response.push(null),void(this._parsingState=null)}if(this._parsingState.status===p.Headers)if(t.length)r(this.headers,t,":");else{if(void 0===this.headers["content-type"])throw new Error("Missing content type");this._parsingState.status=p.Response,this.response=new u(this.headers["content-type"])}else this._parsingState.status===p.Response&&this.response.push(t)},t}();!function(t){t[t.Parts=1]="Parts"}(d||(d={}));var f=function(){function t(t){var e,n=this;if(this.headers={},this.parts=[],this._parsingState={status:d.Parts,boundaryEnd:null},this.boundary=null,!t)throw new Error("Headers missing");if(!(e="string"==typeof t?t:t.get?t.get("content-type"):t["content-type"]))throw Error("content-type header not found");var s=e.split(/;/g);if(this.type=s.shift().trim(),0!==this.type.indexOf("multipart"))throw new Error("Expecting a multipart type. Received: ".concat(e));if(s.forEach((function(t){return r(n.headers,t,"=")})),!this.headers.boundary)throw new Error("Invalid Content Type: no boundary");this.boundary="--".concat(this.headers.boundary),this._parsingState.boundaryEnd="--".concat(this.headers.boundary,"--"),this._parsingState.status=d.Parts}return t.prototype.done=function(){return!this._parsingState},t.prototype.parse=function(t){i(this,t)},t.prototype.push=function(t){var e=this.parts.length?this.parts[this.parts.length-1]:null;if(!this._parsingState)throw new Error("Attempting to parse a completed multipart");if(null===t)return e&&!e.done()&&e.push(null),void(this._parsingState=null);if(t===this._parsingState.boundaryEnd)this.push(null);else if(t===this.boundary)e&&!e.done()&&e.push(null),this.parts.push(new l);else if(e)e.push(t);else if(t.length)throw new Error("Unexpected line: ".concat(t))},t}();t.Parser=f,t.Part=l,t.Response=u,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=parser-multipart.min.js.map
